version: '3'
services:

  db:
    restart: always
    image: postgres:9.6-alpine
    env_file: env/db.env
    shm_size: 64MB
    networks:
      - nemushee_internal
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mastodon"]
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:6.0-alpine
    networks:
      - nemushee_internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - redis:/data

#  es:
#    restart: always
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.10
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - "cluster.name=es-mastodon"
#      - "discovery.type=single-node"
#      - "bootstrap.memory_lock=true"
#    networks:
#      - nemushee_internal
#    healthcheck:
#      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1

  web:
    build: .
    image: ghcr.io/katonux/nemushee/mastodon:3.3.0
    restart: always
    env_file: .env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000 -b '0.0.0.0'"
    # environment:
    #   - VIRTUAL_HOST=nemushee.net
    #   - VIRTUAL_PORT=3000
    #   - LETSENCRYPT_HOST=nemushee.net
    #   - LETSENCRYPT_EMAIL=sheeptech@vivaldi.net
    networks:
      - nemushee_internal
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    expose:
      - "3000"
    depends_on:
      - db
      - redis
#      - es
    volumes:
      - assets:/mastodon/public/assets
      - packs:/mastodon/public/packs

  # storage:
  #   image: minio/minio
  #   volumes:
  #     - storage:/export
  #   expose:
  #     - "9000"
  #   networks:
  #     - nemushee_internal
  #   environment:
  #     - VIRTUAL_HOST=media.nemushee.net
  #     - VIRTUAL_PORT=9000
  #     - LETSENCRYPT_HOST=media.nemushee.net
  #     - LETSENCRYPT_EMAIL=sheeptech@vivaldi.net
  #   command: server /export

  streaming:
    build: .
    image: ghcr.io/katonux/nemushee/mastodon:3.3.0
    restart: always
    env_file: .env.production
    command: node ./streaming
    # environment:
    #   - VIRTUAL_HOST=stream.nemushee.net
    #   - VIRTUAL_PORT=4000
    #   - LETSENCRYPT_HOST=stream.nemushee.net
    #   - LETSENCRYPT_EMAIL=sheeptech@vivaldi.net
    networks:
      - nemushee_internal
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    expose:
      - "4000"
    depends_on:
      - db
      - redis

  sidekiq:
    build: .
    image: ghcr.io/katonux/nemushee/mastodon:3.3.0
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -c 2
    depends_on:
      - db
      - redis
    networks:
      - nemushee_internal
    volumes:
      - sidekiq:/mastodon/public/system

volumes:
  postgres:
   driver: local
  redis:
    driver: local
  assets:
    driver: local
  packs:
    driver: local
  sidekiq:
    driver: local
  storage:
    driver: local
    driver_opts:
      type: none
      device: /mnt/disk2t/nemushee

networks:
  nemushee_internal:
    external: true
