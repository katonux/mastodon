version: '3'
services:

  db:
    restart: always
    image: postgres:9.6-alpine
    env_file: env/db.env
    shm_size: 64MB
    networks:
      - nemushee_internal
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mastodon", "-d", "mastodon_production"]
    volumes:
      - nemushee_postgres_v2:/var/lib/postgresql/data
      - /mnt/disk/nemushee-backup:/backup

  redis:
    restart: always
    image: redis:6.0-alpine
    networks:
      - nemushee_internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - redis:/data

  web:
    build: .
    image: ghcr.io/katonux/nemushee/nemushee:3.4.0
    restart: always
    env_file: env/production.env
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000 -b '0.0.0.0'"
    networks:
      - nemushee_internal
    healthcheck:
      test: ["CMD-SHELL", "wget --header='Host: nemushee.net' -q --spider --proxy=off localhost:3000/health || exit 1"]
      retries: 2
      start_period: "90s"
    expose:
      - "3000"

  streaming:
    build: .
    image: ghcr.io/katonux/nemushee/nemushee:3.4.0
    restart: always
    env_file: env/production.env
    command: node ./streaming
    networks:
      - nemushee_internal
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
      retries: 2
      start_period: "60s"
    expose:
      - "4000"

  sidekiq:
    build: .
    image: ghcr.io/katonux/nemushee/nemushee:3.4.0
    restart: always
    env_file: env/production.env
    command: bundle exec sidekiq -c 2
    networks:
      - nemushee_internal
    volumes:
      - sidekiq:/mastodon/public/system

volumes:
  nemushee_postgres_v2:
   external: true
  redis:
    driver: local
  sidekiq:
    driver: local
  storage:
    driver: local
    driver_opts:
      type: none
      device: /mnt/disk2t/nemushee

networks:
  nemushee_internal:
    external: true
